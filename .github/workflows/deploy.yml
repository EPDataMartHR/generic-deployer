name: Deploy with Generic Deployer

on:
  repository_dispatch:
    types: [deploy]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:      
    - name: Checkout triggering repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.client_payload.repository }}
        ref: ${{ github.event.client_payload.ref }}
        token: ${{ secrets.REPO_DISPATCH_TOKEN }}

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up AWS SAM
      uses: aws-actions/setup-sam@v2
    
    - name: Configure AWS credentials for production
      if: ${{ github.event.client_payload.environment == 'pro' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT_ID }}:role/${{ secrets.AWS_IAM_ROLE }}
        role-session-name: GitHubActions-Production
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Configure AWS credentials for development
      if: ${{ github.event.client_payload.environment == 'dev' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_DEV_ACCOUNT_ID }}:role/${{ secrets.AWS_IAM_ROLE }}
        role-session-name: GitHubActions-Development
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Run AWS SAM applications
      run: |
        echo "Current directory: $(pwd)"
        # Build SAM application
        sam build --use-container --template-file ${{ github.event.client_payload.sam_template_file }}

        # Deploy SAM application
        sam deploy \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --stack-name ${{ github.event.client_payload.stack_name }} \
          --s3-bucket "cep-${{ github.event.client_payload.environment }}-sam-deployments"
          --s3-prefix "${{ github.event.client_payload.stack_name }}" \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --region "${{ secrets.AWS_REGION }}" \
          --tags "global:project=DL-HR" "global:bu=HR"
